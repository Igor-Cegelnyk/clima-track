networks:
  clima:


services:
  pg:
    image: postgres:15-alpine
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: clima_track
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d clima_track" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - clima

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    networks:
      - clima

  app:
    &app
    build:
      context: .
      dockerfile: app/Dockerfile
    container_name: app_container
    depends_on:
      pg:
        condition: service_healthy
    env_file:
      - .env.template
    volumes:
      - app_data:/app/app/log
    ports:
      - "8000:8000"
    networks:
      clima:

  celery-worker:
    <<: *app
    ports: [ ]
    container_name: celery_worker_container
    command: celery-worker
    volumes:
      - app_data:/app/app/log
    networks:
      clima:


  celery-beat:
    <<: *app
    command: celery-beat
    container_name: celery_beat_container
    ports: [ ]
    volumes:
      - app_data:/app/app/log
    networks:
      clima:


  flower:
    <<: *app
    command: flower
    container_name: celery_flower_container
    ports:
      - "5555:5555"
    networks:
      clima:


volumes:
  postgres_data:
  redis_data:
  app_data: